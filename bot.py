import  telebot
import psycopg2
from prettytable import PrettyTable
from telebot import types
from DB_functions import Database


IP = '"IsIndividual"'
LP = '"IsLegal"'
Emp = '"isEmployee"'

F_phone = "userphone"
F_name = "username"
F_TIN = "tin"
F_OrgName = "orgname"

#cursor.execute('SELECT item.partnumber, item.distrib, item.itemid, item.productname, location.quantity, price.value, price.currencyid FROM ((eureca.item JOIN eureca.location ON (((item.itemid)::text = (location.itemid)::text))) JOIN eureca.price ON (((item.itemid)::text = (price.itemid)::text)));')

#records = cursor.fetchall()
#print(records)


db = Database()

bot = telebot.TeleBot('5525614928:AAH3LrJPa5ZRRfZPwNmmL_cSREvblzTIlUs')

markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
RegButton = types.KeyboardButton('–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')
markup.add(RegButton)

markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
IndividualPersonButton = types.KeyboardButton('?? –§–∏–∑.–ª–∏—Ü–æ')
LegalPersonButton = types.KeyboardButton('?? –Æ—Ä.–ª–∏—Ü–æ')
EmployeeButton = types.KeyboardButton('????? –°–æ—Ç—Ä—É–¥–Ω–∏–∫')
markup2.add(IndividualPersonButton, LegalPersonButton, EmployeeButton)

markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
MakeAnOrderButton = types.KeyboardButton('üì¶ –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
FindByIDButton = types.KeyboardButton('–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞ –ø–æ ID')
ProfileButton = types.KeyboardButton('‚ÑπÔ∏è –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
markup3.add(MakeAnOrderButton, ProfileButton, FindByIDButton)


markup4 = types.ReplyKeyboardMarkup(resize_keyboard=True)
EditProfileButton = types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
DeleteProfileButton = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
markup4.add(EditProfileButton, DeleteProfileButton)

@bot.message_handler(commands = ['start'])
def start(message):

    #db.FieldDelete(message.chat.id)
    if not db.CheckID(message.chat.id):
        db.AddUser(message.chat.id)
        bot.send_message(message.chat.id,
                         '–î–ª—è –Ω–∞—á–∞–ª–∞ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è',
                         parse_mode='html', reply_markup=markup)


        #db.FieldInput(message.chat.id, IP, 1)
        #db.FieldInput(message.chat.id, LP, 0)


        bot.register_next_step_handler(message, RegTypeChoice)
    else:
        # –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –∫–∞–∂–¥—ã—Ö —Ä–æ–ª–µ–π –æ—Ç–¥–µ–ª—å–Ω–æ

        bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π:', reply_markup=markup3)
        bot.register_next_step_handler(message, ReggedUsers_Buttons)
    #–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞—Ä–µ–≥–∞–Ω–æ–≥–æ (—Ö–∞–π —Ç—ã –∫—Ä—É—Ç —Ç—ã –ø—Ä–∏–Ω—è—Ç)
    #–ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª—å (–∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ, —É–¥–∞–ª–∏—Ç—å—Å—è –∏–∑ –±–¥, —Ç–¥, —Ç–ø)
    #–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–ª–∞–≥–æ–≤ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∑–∞—Ä–µ–≥–∞—Ç—å—Å—è –∫–∞–∫ –∫—Ç–æ-—Ç–æ –µ—â—ë
    #–§—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–¥ (—Ç–æ–∂–µ –∫–Ω–æ–ø–∫–∞)
    #–§—É–Ω–∫—Ü–∏—è –∑–∞–∫–∞–∑–∞ (–∫–Ω–æ–ø–ø–ø–∫–∞)


def RegTypeChoice(message):
    if message.chat.type == 'private': #–µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç –±–æ—Ç–∞, –∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if message.text == '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è':
            bot.send_message(message.chat.id, '<b>–•—Ç–æ –í—ã?</b>', parse_mode='html', reply_markup=markup2)
            bot.register_next_step_handler(message, Roles)



def Roles(message):
    if message.text == '?? –§–∏–∑.–ª–∏—Ü–æ':
        bot.send_message(message.chat.id,
                         '–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ: \n - <b>–§–ò–û</b> \n - <b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>',
                         parse_mode='html', reply_markup=types.ReplyKeyboardRemove())
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –§–ò–û. –ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á')
        bot.register_next_step_handler(message, IP_get_FIO)
    elif message.text == '?? –Æ—Ä.–ª–∏—Ü–æ':
        bot.send_message(message.chat.id,
                         '–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ: \n - <b>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</b> \n - <b>–ò–ù–ù</b>',
                         parse_mode='html', reply_markup=types.ReplyKeyboardRemove())
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –í–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä: –û–û–û "–≠–í–†–ò–ö–ê"')
        bot.register_next_step_handler(message, LP_get_Name)
    elif message.text == '????? –°–æ—Ç—Ä—É–¥–Ω–∏–∫':
        bot.send_message(message.chat.id,
                         '–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ <b>–Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>. –ù–∞–ø—Ä–∏–º–µ—Ä: 88005553535',
                         parse_mode='html', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, Emp_get_Phone)






#-------- –ó–∞–Ω–æ—Å–∏–º –§–ò–û —Ñ–∏–∑.–ª–∏—Ü–∞ –≤ –ë–î --------#
def IP_get_FIO(message):
    # if (len(message.text) < 5 or len(message.text) > 70):
    #     bot.send_message(message.chat.id, '–õ–∏–±–æ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ —Å–∏–º–≤–æ–ª–æ–≤, –ª–∏–±–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
    # else:
        db.FieldInput(message.chat.id, F_name, message.text)
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: 88005553535')
        bot.register_next_step_handler(message, IP_get_Phone)

#-------- –ó–∞–Ω–æ—Å–∏–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ñ–∏–∑.–ª–∏—Ü–∞ –≤ –ë–î --------#
def IP_get_Phone(message):
    db.FieldInput(message.chat.id, F_phone, message.text)
    EndOfRegistration(message)








#-------- –ó–∞–Ω–æ—Å–∏–º –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —é—Ä.–ª–∏—Ü–∞ –≤ –ë–î --------#
def LP_get_Name(message):
    db.FieldInput(message.chat.id, F_OrgName, message.text)
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù. –ù–∞–ø—Ä–∏–º–µ—Ä: 1234567890')
    bot.register_next_step_handler(message, LP_get_TIN)

#-------- –ó–∞–Ω–æ—Å–∏–º –ò–ù–ù —é—Ä.–ª–∏—Ü–∞ –≤ –ë–î --------#
def LP_get_TIN(message):
    db.FieldInput(message.chat.id, F_TIN, message.text)
    EndOfRegistration(message)








#-------- –ó–∞–Ω–æ—Å–∏–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –ë–î --------#
def Emp_get_Phone(message):
    db.FieldInput(message.chat.id, F_phone, message.text)
    EndOfRegistration(message)








#-------- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ --------#
def EndOfRegistration(message):
    bot.send_message(message.chat.id,
                     '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–∫–æ–Ω—á–µ–Ω–∞. \n<b>–ñ–¥–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.</b>', parse_mode='html')
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π:', reply_markup=markup3)
    bot.register_next_step_handler(message, ReggedUsers_Buttons)


def ReggedUsers_Buttons(message):
    if message.chat.type == 'private':
        if message.text == 'üì¶ –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑':
            if db.CheckAccess(message.chat.id, IP):
                bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞')
                bot.register_next_step_handler(message, OrderInputID)
            else:
                bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', reply_markup=markup3)
                bot.register_next_step_handler(message, ReggedUsers_Buttons)
            #bot.send_message(message.chat.id, '–§—É–Ω–∫—Ü–∏—è "–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑" –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–∞. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–∞—Ä—É –¥–Ω–µ–π', reply_markup=types.ReplyKeyboardRemove())
            # + –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
        elif message.text == '‚ÑπÔ∏è –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
            # –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –∏–Ω—Ñ–∞ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–µ–π):
            # ‚Äî –§–ò–û + —Ç–µ–ª–µ—Ñ–æ–Ω (–µ—Å–ª–∏ —Ñ–∏–∑–∏–∫)
            # ‚Äî –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ + –ò–ù–ù (–µ—Å–ª–∏ —é—Ä–∏–∫)
            # ‚Äî –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–µ—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫)
            # bot.send_message(message.chat.id, '–§—É–Ω–∫—Ü–∏—è "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å" –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–∞. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–∞—Ä—É –¥–Ω–µ–π')

            bot.send_message(message.chat.id, '–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—Å:', reply_markup=markup4)
            bot.send_message(message.chat.id, db.GetRow(message.chat.id))
            bot.register_next_step_handler(message, EditOrDeleteProfile)

        elif message.text == '–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞ –ø–æ ID':
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞", reply_markup = types.ReplyKeyboardRemove())
            bot.register_next_step_handler(message, FindByID)
            # + –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥


def EditOrDeleteProfile(message):
    if message.chat.type == 'private':
        if message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å':

            # –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º —Ç–æ–≥–æ, —á—Ç–æ —Ö–æ—á–µ—Ç—Å—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.
            # —ç—Ç–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —É–∂–µ —Å–æ–≥–ª–∞—Å–æ–≤—ã–≤–∞—Ç—å —Å –ë–î –∫–∞–∫-—Ç–æ
            # —Ç–æ –µ—Å—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –ø–∏—Å–∞—Ç—å —Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ–º—É –æ–Ω–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç (—Ñ–∏–∑–∏–∫—É, —é—Ä–∏–∫—É –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É)
            # + –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
            bot.send_message(message.chat.id, '<b>–í—ã–±–µ—Ä–µ—Ç–µ —Ä–æ–ª—å –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å (–¥–æ–±–∞–≤–∏—Ç—å) –¥–∞–Ω–Ω—ã–µ</b>', parse_mode='html', reply_markup=markup2)
            bot.register_next_step_handler(message, Roles)
            pass
        elif message.text == '–£–¥–∞–ª–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
            markup5 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            YesDeleteButton = types.KeyboardButton('–î–∞, —Ö–æ—á—É —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ')
            markup5.add(YesDeleteButton)
            # –ø–æ–∫–∞ —á—Ç–æ –±—É–¥–µ—Ç –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–î–∞, —É–¥–∞–ª–∏—Ç—å", –Ω–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –µ—â–µ –∫–Ω–æ–ø–∫–∞ "–Ω–∞–∑–∞–¥"
            bot.send_message(message.chat.id, '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ?', reply_markup=markup5)
            db.FieldDelete(message.chat.id)
            bot.register_next_step_handler(message, DeleteProfile)


def DeleteProfile(message):
    if message.chat.type == 'private':
        if message.text == '–î–∞, —Ö–æ—á—É —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ':
            # SQL –∑–∞–ø—Ä–æ—Å —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
            bot.send_message(message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ.\n–ï—Å–ª–∏ –≤ –±—É–¥—É—â–µ–º –í–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, <b>–Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b>', parse_mode='html', reply_markup=types.ReplyKeyboardRemove())
        start(message)
        # elif message.text == '–ù–∞–∑–∞–¥'


def OrderInputID(message):
    db.MakeOrder(message.chat.id, message.text)
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞')
    bot.register_next_step_handler(message, OrderInputQuantity)

def OrderInputQuantity(message):
    db.OrderFieldInput(message.chat.id, "quantity", message.text)

    bot.send_message(message.chat.id, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ –ø—Ä–∏–Ω—è—Ç–∞', reply_markup=markup3)
    bot.register_next_step_handler(message, ReggedUsers_Buttons)


def FindByID(message):
    db.cursor.execute(
        f"SELECT item.distrib, item.itemid, location.quantity, price.value, price.currencyid FROM ((eureca.item JOIN eureca.location ON (((item.itemid)::text = (location.itemid)::text))) JOIN eureca.price ON (((item.itemid)::text = (price.itemid)::text))) WHERE partnumber = '{str(message.text)}';")


    records = db.cursor.fetchall()

    my_list = []
    for x in records:
        myrow = str(x)[1: -1].split(",")
        for y in myrow:
            my_list.append(y)

    #my_str = ','.join(my_list)

    th = ['distrib', 'itemid', 'quantity', 'value', 'currencyid']
    td = my_list
    columns = len(th)  # –ü–æ–¥—Å—á–∏—Ç–∞–µ–º –∫–æ–ª-–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –Ω–∞ –±—É–¥—É—â–µ–µ.

    table = PrettyTable(th)  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É.

    td_data = td[:]
    while td_data:
        table.add_row(td_data[:columns])
        td_data = td_data[columns:]


    bot.send_message(message.chat.id, f'<pre><b>{table}</b></pre>', parse_mode='html', reply_markup=markup3)

    bot.register_next_step_handler(message, ReggedUsers_Buttons)
    #bot.send_message(message.chat.id, f'```{table}```', parse_mode='Markdown')




@bot.message_handler(commands = ['help'])
def button1(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–Ø —Ö–∞—á—é –ø—É—ç—Ä—á–∏–∫", url="https://vk.com/m7k7r"))
    bot.send_message(message.chat.id, '–ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ –∞–Ω–∏–º–µ –ø–æ–¥—Ä–æ—Å—Ç–∫—É', reply_markup=markup)
print("zxc")


bot.polling(none_stop= True)





